openapi: 3.0.0
info:
  title: Модуль работы с АК
  version: "1.0 03.04.2024 09:00" 
  description: В названиях полей для поиска могут встречаться search[objName] - сюда вводим id объекта, но возвращается "рекурсивный" объект - это для случаев когда в таблице есть прямая ссылка на другую таблицу , и есть search[idName] - для случаев когда в таблице нет прямой ссылки на другую таблицу а есть через промежуточную, и метод возвращает не "рекурсивный" объект а структуру типа array["id"=>id,"value"=>"..."]  
    <br>
    <br>
    <b>
    Примеры форматирования description с помощью markdown приведены в самом низу в методе:[/help/markdownRules](#/help/markdownRules)
security:
  - BearerAuth: []
paths:
  /param/getParam:
    get:
      tags:
        - param
      summary: Первоначальные параметры конфигурации CRM
      description: В файле каждая строка описывает переменную- [имя переменной]=значение
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
  /permis/permisUnit:
    get:
      tags:
        - permis
      summary: Права доступа к методам API для ролей пользователей- авторизация
      parameters:
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
  /permis/permisUnitPut:
    put:
      tags:
        - permis
      summary: Изменение прав доступа для ролей
      requestBody:
        description: Данные для изменения прав доступа для ролей
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  description: "Данные"
                  type: object
                  properties:
                    name_api:
                      $ref: "#/components/schemas/permisUnitPut"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /permis/permisPerson:
    get:
      tags:
        - permis
      summary: Права доступа к методам API для пользователей- авторизация
      parameters:
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        type: string              
  /permis/permisPerson/{id_person}:
    get:
      tags:
        - permis
      summary: Права доступа к методам API для конкретного пользователя
      parameters:
        - name: id_person
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
  /permis/permisPersonPut:
    put:
      tags:
        - permis
      summary: Изменение прав доступа для ролей
      requestBody:
        description: Данные для изменения прав доступа для пользователей
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  description: "Данные"
                  type: object
                  properties:
                    name_api:
                      $ref: "#/components/schemas/permisPersonPut"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /permis/permisPersonPut/{id_person}:
    put:
      tags:
        - permis
      summary: Изменение прав доступа для конкретного пользователя
      parameters:
        - name: id_person
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения прав доступа для пользователей
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  description: "Данные"
                  type: object
                  properties:
                    name_api:
                      $ref: "#/components/schemas/permisPersonPut"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"                
  /auth/authLogin:
    post:
      tags:
        - auth
      summary: Аутентификация пользователя. Вход в CRM
      requestBody:
        description: "Данные для аутентификации"
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  description: "логин пользователя"
                  type: string
                password:
                  description: "Пароль пользователя"
                  type: string
                idOwner:
                  description: "id АК необязательный параметр, можно domain"
                  type: integer
                domain:
                  description: "домен АК необязательный параметр, можно idOwner"
                  type: string                  
                remember:
                  description: 1- если пользователь хочет дальше авторизовываться через
                  type: integer
                remote_addr:
                  description: "IP-адрес клиента (опционально)"
                  type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: object
                    properties:
                      auth:
                        type: integer
                        example: 1
                      id:
                        type: integer
                        example: 3
                      login:
                        type: string
                        example: anna
                      id_unit:
                        type: integer
                        example: 3
                      realname:
                        type: string
                        example: Анна
                      script_name:
                        type: string
                        example: Скрипт, переадресации при аутентификации
                      id_owner:
                        type: integer
                        example: 1
                      timezone:
                        type: integer
                        example: 5
                      token:
                        type: string
                        example: "DFmkxjr%fdkmw4"
                      cookie:
                        type: string
                        example: "Cookie ключ, если пользователь выбрал “Запомнить меня”"
                      timeout:
                        type: string
                        example: "3600"
                      edit:
                        type: string
                        example: "1"
                      permis:
                        type: string
                        example: "Array Массив прав на скрипты"
        "401":
          description: Отрицательная аутентификация.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultError"
  /auth/authLoginGet:
    post:
      tags:
        - auth
      summary: Аутентификация пользователя. Вход в CRM
      parameters:
        - name: login
          in: query
          description: Логин пользователя
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Пароль пользователя
          required: true
          schema:
            type: string
        - name: remember
          in: query
          description: 1- если пользователь хочет дальше авторизовываться через Cookie
          schema:
            type: integer
        - name: remote_addr
          in: query
          description: IP-адрес клиента (опционально)
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: object
                    properties:
                      auth:
                        type: integer
                        example: 1
                      id:
                        type: integer
                        example: 3
                      login:
                        type: string
                        example: anna
                      id_unit:
                        type: integer
                        example: 3
                      realname:
                        type: string
                        example: Анна
                      script_name:
                        type: string
                        example: Скрипт, переадресации при аутентификации
                      id_owner:
                        type: integer
                        example: 1
                      timezone:
                        type: integer
                        example: 5
                      token:
                        type: string
                        example: "DFmkxjr%fdkmw4"
                      cookie:
                        type: string
                        example: "Cookie ключ, если пользователь выбрал “Запомнить меня”"
                      timeout:
                        type: string
                        example: "3600"
                      edit:
                        type: string
                        example: "1"
                      permis:
                        type: string
                        example: "Array Массив прав на скрипты"
        "401":
          description: Отрицательная аутентификация.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultError"
  /auth/authLogout:
    get:
      tags:
        - auth
      summary: Выход из CRM.
      parameters:
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string            
      responses:
        "200":
          description: Успешный выход из CRM.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /auth/authRefresh:
    post:
      tags:
        - auth
      summary: Получение новых access и refresh token
      requestBody:
        description: "Получение новых access и refresh token"
        content:
          application/json:
            schema:
              type: object
              properties:
                tokenRefresh:
                  description: "tokenRefresh"
                  type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: object
                    properties:
                      auth:
                        type: integer
                        example: 1
                      id:
                        type: integer
                        example: 3
                      login:
                        type: string
                        example: anna
                      id_unit:
                        type: integer
                        example: 3
                      realname:
                        type: string
                        example: Анна
                      script_name:
                        type: string
                        example: Скрипт, переадресации при аутентификации
                      id_owner:
                        type: integer
                        example: 1
                      timezone:
                        type: integer
                        example: 5
                      token:
                        type: string
                        example: "DFmkxjr%fdkmw4"
                      cookie:
                        type: string
                        example: "Cookie ключ, если пользователь выбрал “Запомнить меня”"
                      timeout:
                        type: string
                        example: "3600"
                      edit:
                        type: string
                        example: "1"
                      permis:
                        type: string
                        example: "Array Массив прав на скрипты"
        "401":
          description: Отрицательная аутентификация.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultError"
  /log/logAll:
    get:
      tags:
        - log
      summary: история работы пользователей с API
      parameters:
        - name: search[idPerson]
          in: query
          description: поиск по ID пользователя
          schema:
            type: integer
        - name: search[dtBegin]
          in: query
          description: поиск по дате от
          schema:
            type: string
        - name: search[dtEnd]
          in: query
          description: поиск по дате до
          schema:
            type: string        
        - name: search[name]
          in: query
          description: поиск по названиею метода API
          schema:
            type: string   
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[idPerson]** => Имя пользователя
            * **[name]** => Название метода API
            * **[dt]** => Дата/время
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /owners/ownerAll:
    get:
      tags:
        - owners
      summary: Получение списка всех АК
      parameters:
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/owner"
  /owners/ownerInfoPut/{id}:
    put:
      tags:
        - owners
      summary: Изменение информации о АК
      parameters:
        - name: id
          in: path
          description: ID АК
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о АК
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ownerInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /owners/ownerAdd:
    post:
      tags:
        - owners
      summary: Добавление новой АК
      requestBody:
        description: "Данные для добавления новой АК"
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ownerInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /owners/ownerDelete/{id}:
    delete:
      tags:
        - owners
      summary: "Удаление АК"
      parameters:
        - name: "id"
          in: "path"
          description: "ID АК"
          required: true
          schema:
            type: "integer"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /modules/moduleAll:
    get:
      tags:
        - modules
      summary: Получение списка модулей
      parameters:
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/module"
  /modules/moduleInfoPut/{id}:
    put:
      tags:
        - modules
      summary: Изменение информации о модуле
      parameters:
        - name: id
          in: path
          description: ID модуля
          required: true
          schema:
            type: integer
      requestBody:
        description: "Данные для изменения информации о модуле"
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/moduleInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /modules/moduleTblPut/{id}:
    put:
      tags:
        - modules
      summary: Исправление таблиц БД АК для модуля
      parameters:
        - name: id
          in: path
          description: ID модуля
          required: true
          schema:
            type: integer
      requestBody:
        description: "Данные для исправления"
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                pref_ak:
                  description: "pref АК(ID АК)"
                  type: string
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /modules/moduleAdd:
    post:
      tags:
        - modules
      summary: Добавление нового модуля
      requestBody:
        description: "Данные для добавления нового модуля"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/moduleInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    description: "ID пользователя"
                    type: integer
                  input:
                    $ref: "#/components/schemas/ResultOkId"
  /modules/moduleDelete/{id}:
    delete:
      tags:
        - modules
      summary: "Удаление модуля"
      parameters:
        - name: "id"
          in: "path"
          description: "ID модуля"
          required: true
          schema:
            type: "integer"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /persons/personAll:
    get:
      tags:
        - persons
      summary: Получение списка пользователей CRM
      parameters:
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Person"
  /persons/personInfoPut/{id}:
    put:
      tags:
        - persons
      summary: Изменение информации о пользователе CRM
      parameters:
        - name: id
          in: path
          description: ID пользователя CRM
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о пользователе CRM
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PersonInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /persons/personAdd:
    post:
      tags:
        - persons
      summary: Добавление нового пользователя CRM
      requestBody:
        description: "Данные для добавления нового пользователя CRM"
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PersonInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /persons/personDelete/{id}:
    delete:
      tags:
        - persons
      summary: "Удаление пользователя CRM"
      parameters:
        - name: "id"
          in: "path"
          description: "ID пользователя CRM"
          required: true
          schema:
            type: "integer"
        - name: "pref"
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /units/unitAll:
    get:
      tags:
        - units
      summary: Получение списка ролей пользователей CRM
      parameters:
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Unit"
  /units/unitInfoPut/{id}:
    put:
      tags:
        - units
      summary: Изменение информации о роли пользователя CRM
      parameters:
        - name: id
          in: path
          description: ID роли пользователя CRM
          required: true
          schema:
            type: integer
      requestBody:
        description: "Данные для изменения информации о роли пользователя CRM"
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/UnitInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /units/unitAdd:
    post:
      tags:
        - units
      summary: Добавление новой роли пользователя CRM
      requestBody:
        description: "Данные для добавления новой роли пользователя CRM"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitInput"
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                type: object
                properties:
                  pref:
                    description: "ID АК"
                    type: string
                  session_id:
                    description: "ID пользователя"
                    type: integer
                  input:
                    $ref: "#/components/schemas/ResultOkId"
  /units/unitDelete/{id}:
    delete:
      tags:
        - units
      summary: "Удаление роли пользователя CRM"
      parameters:
        - name: "id"
          in: "path"
          description: "ID роли пользователя CRM"
          required: true
          schema:
            type: "integer"
        - name: "pref"
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /Companies/CompanyAll:
    get:
      tags:
        - companies
      summary: Получение списка организаций АК
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу indiv - физ.лицо, entity- юр.лицо
          schema:
            type: string
        - name: search[inn]
          in: query
          description: поиск по инн
          schema:
            type: integer
        - name: search[kpp]
          in: query
          description: поиск по кпп
          schema:
            type: integer
        - name: search[ogrn]
          in: query
          description: поиск по огрн
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[realname]
          in: query
          description: поиск по полному названию
          schema:
            type: string
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /Companies/CompanyInfoPut/{id}:
    put:
      tags:
        - companies
      summary: Изменение информации об организации АК
      parameters:
        - name: id
          in: "path"
          description: "ID организации АК"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации об организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/CompanyInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /Companies/CompanyAdd:
    post:
      tags:
        - companies
      summary: Добавление новой организации АК
      requestBody:
        description: Данные для добавления новой организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/CompanyInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /Companies/CompanyDelete/{id}:
    delete:
      tags:
        - companies
      summary: Удаление организации АК
      parameters:
        - name: id
          in: path
          description: ID организации АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /companyContract/companyContractAll:
    get:
      tags:
        - companyContract
      summary: Получение списка договоров организаций
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objCompany]
          in: query
          description: поиск по ID компании
          schema:
            type: integer
        - name: search[objContractor]
          in: query
          description: поиск по ID контрагента
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[number]
          in: query
          description: поиск по номеру
          schema:
            type: string
        - name: search[objAccount]
          in: query
          description: поиск по ID счета контрагента
          schema:
            type: integer
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[objCompany]** => объект Организация
            * **[objContractor]** => объект Контрагент
            * **[name]** => Название
            * **[number]** => Номер
            * **[dtBegin]** => Начало действия
            * **[dtEnd]** => Окончание действия
            * **[dtContractSign]** => Дата подписания            
            * **[nds]** => НДС % (список: 0 -0%, 10 -10%, 20 -20%, NULL -Без НДС)
            * **[ndsType]** => НДС тип расчета  (Включен в тариф / Добавляется к тарифу)
            * **[note]** => Дополнительнгая информация
            * **[objAccount]** => объект Счет контрагента
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /companyContract/companyContractInfoPut/{id}:
    put:
      tags:
        - companyContract
      summary: Изменение информации о договоре организации АК
      parameters:
        - name: id
          in: "path"
          description: "ID договора организации АК"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о договоре организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/companyContractInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /companyContract/companyContractAdd:
    post:
      tags:
        - companyContract
      summary: Добавление нового договора организации АК
      requestBody:
        description: Данные для добавления нового договора организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/companyContractInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /companyContract/companyContractDelete/{id}:
    delete:
      tags:
        - companies
      summary: Удаление договора организации АК
      parameters:
        - name: id
          in: path
          description: ID договора организации АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
                
  /contractorAccount/contractorAccountAll:
    get:
      tags:
        - contractorAccount
      summary: Получение списка счетов контрагента
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[dtBegin]
          in: query
          description: ппо дате начала
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: ппо дате окончания
          schema:
            type: string
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[main]** => основной 1-Да, 0-нет
            * **[name]** => Название
            * **[type]** => тип 0-наличиные, 1 -безналичные
            * **[card]** => номер карты
            * **[bankName]** => Банк название
            * **[bankBik]** => Банк БИК       
            * **[account]** => Банк номер счета
            * **[note]** => Дополнительная информация
            * **[dtBegin]** => Дата начала действия
            * **[dtEnd]** => Дата окончания действия
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /contractorAccount/contractorAccountInfoPut/{id}:
    put:
      tags:
        - contractorAccount
      summary: Изменение информации о счете контрагента
      parameters:
        - name: id
          in: "path"
          description: "ID счета"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о счете
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractorAccountInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /contractorAccount/contractorAccountAdd:
    post:
      tags:
        - contractorAccount
      summary: Добавление нового счета контрагента
      requestBody:
        description: Данные для добавления нового счета
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractorAccountInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /contractorAccount/contractorAccountDelete/{id}:
    delete:
      tags:
        - contractorAccount
      summary: Удаление счета контрагента
      parameters:
        - name: id
          in: path
          description: ID счета
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"                
  /contractServices/contractServicesAll:
    get:
      tags:
        - contractServices
      summary: Получение списка услуг договоров организаций
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objTypeServices]
          in: query
          description: поиск по типу услуги
          schema:
            type: string
        - name: search[objGroup]
          in: query
          description: поиск по ID группы
          schema:
            type: integer
        - name: search[objObject]
          in: query
          description: поиск по ID объекта
          schema:
            type: integer
        - name: search[objDepartment]
          in: query
          description: поиск по ID отдела
          schema:
            type: integer
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[objTypeServices]** => тип услуги
            * **[objGroup]** => Группа объектов (список из групп объектов клиента + “все группы”)
            * **[objObject]** => Объект (список из объектов по указанной группе + “все объекты”). Есть проверка соответствия объекта группе.
            * **[objDepartment]** => Отдел (список из отделов по указанному объекту + “все отделы”). Есть проверка соответствия отдела объекту.
            * **[units_hour]** => Единиц в одном часе (Конвертация часов в единицы измерения по договору - Сколько единиц в одном часе?)
            * **[hour_units]** => Часов в одной единице (Конвертация часов в единицы измерения по договору - Сколько часов в одной единице?)
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /contractServices/contractServicesInfoPut/{id}:
    put:
      tags:
        - contractServices
      summary: Изменение информации об услуге по договору организации АК
      parameters:
        - name: id
          in: "path"
          description: "ID договора организации АК"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о договоре организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractServicesInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /contractServices/contractServicesAdd:
    post:
      tags:
        - contractServices
      summary: Добавление новой услуги договора организации АК
      requestBody:
        description: Данные для добавления новой услуги договора организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractServicesInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /contractServices/contractServicesDelete/{id}:
    delete:
      tags:
        - contractServices
      summary: Удаление услуг договора организации АК
      parameters:
        - name: id
          in: path
          description: ID услуги договора организации АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"                
  /typeServices/typeServicesAll:
    get:
      tags:
        - typeServices
      summary: Получение справочника услуг договоров организаций
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objTypeUnits]
          in: query
          description: поиск по единице
          schema:
            type: string
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[dtChange]** => дата/время последнего изменения
            * **[idPersonChange]** => кто вносил последние изменения 
            * **[name]** => название
            * **[objTypeUnits]** => тип единицы измерения
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /typeServices/typeServicesInfoPut/{id}:
    put:
      tags:
        - typeServices
      summary: Изменение информации о типе услуге по договору организации АК
      parameters:
        - name: id
          in: "path"
          description: "ID типа услуги"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о договоре организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeServicesInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeServices/typeServicesAdd:
    post:
      tags:
        - typeServices
      summary: Добавление нового типа услуги договора организации АК
      requestBody:
        description: Данные для добавления нового типа услуги договора организации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeServicesInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /typeServices/typeServicesDelete/{id}:
    delete:
      tags:
        - typeServices
      summary: Удаление типа услуг договора организации АК
      parameters:
        - name: id
          in: path
          description: ID типа услуги договора организации АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"                
  /contractors/contractorAll:
    get:
      tags:
        - contractor
      summary: Получение списка контрагентов
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу 1 - физ.лицо, 0- юр.лицо
          schema:
            type: string
        - name: like[inn]
          in: query
          description: поиск по инн
          schema:
            type: integer
        - name: like[kpp]
          in: query
          description: поиск по кпп
          schema:
            type: integer
        - name: like[ogrn]
          in: query
          description: поиск по огрн
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[egrul]
          in: query
          description: поиск по названию ЕГРЮЛ
          schema:
            type: string
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[dtChange]** => когда внесли последние изменения
            * **[personChange]** => кто внес последние изменения
            * **[type]** => 1-физ.лицо, 0- юр.лицо
            * **[name]** => Название
            * **[egrul]** => Название по ЕГРЮЛ
            * **[inn]** => ИНН
            * **[kpp]** => КПП
            * **[ogrn]** => ОГРН
            * **[note]** => Дополнительнгая информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /contractors/contractorInfoPut/{id}:
    put:
      tags:
        - contractor
      summary: Изменение информации о контрагенте
      parameters:
        - name: id
          in: "path"
          description: "ID контрагента"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о контрагенте
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractorInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /contractors/contractorAdd:
    post:
      tags:
        - contractor
      summary: Добавление нового контрагента
      requestBody:
        description: Данные для добавления нового контрагента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/contractorInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /contractors/contractorDelete/{id}:
    delete:
      tags:
        - contractor
      summary: Удаление контрагента
      parameters:
        - name: id
          in: path
          description: ID контрагента
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /specialties/specialityAll:
    get:
      tags:
        - specialties
      summary: Получение списка специализаций АК
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /specialties/specialityInfoPut/{id}:
    put:
      tags:
        - specialties
      summary: Изменение информации о специализации АК
      parameters:
        - name: id
          in: "path"
          description: "ID специализации АК"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о специализации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/SpecialityInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /specialties/specialityAdd:
    post:
      tags:
        - specialties
      summary: Добавление новой специализации АК
      requestBody:
        description: Данные для добавления новой специализации АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/SpecialityInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  pref:
                    description: "ID АК"
                    type: string
                  session_id:
                    description: "ID пользователя"
                    type: integer
                  input:
                    $ref: "#/components/schemas/ResultOkId"
  /specialties/specialityDelete/{id}:
    delete:
      tags:
        - specialties
      summary: Удаление специализации АК
      parameters:
        - name: id
          in: path
          description: ID специализации АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /accounts/accountAll:
    get:
      tags:
        - accounts
      summary: Получение списка счетов АК
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[idCompany]
          in: query
          description: поиск по ID организации 
          schema:
            type: integer
        - name: search[main]
          in: query
          description: поиск по основной
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу
          schema:
            type: string
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[card]
          in: query
          description: поиск по номеру карты
          schema:
            type: string
        - name: like[bankName]
          in: query
          description: поиск по названию банка
          schema:
            type: string
        - name: like[bankBik]
          in: query
          description: поиск по БИК
          schema:
            type: string
        - name: like[account]
          in: query
          description: поиск по номеру счета
          schema:
            type: string
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[objWorker]** => объект Исполнитель
            * **[main]** => основной 1-Да, 0-нет
            * **[type]** => тип 0-наличиные, 1 -безналичные
            * **[card]** => номер карты
            * **[bankName]** => Банк название
            * **[bankBik]** => Банк БИК       
            * **[account]** => Банк номер счета
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /accounts/accountInfoPut/{id}:
    put:
      tags:
        - accounts
      summary: Изменение информации о счете АК
      parameters:
        - name: id
          in: "path"
          description: "ID счета АК"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации о счете АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/AccountInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /accounts/accountAdd:
    post:
      tags:
        - accounts
      summary: Добавление нового счета АК
      requestBody:
        description: Данные для добавления нового счета АК
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/AccountInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /accounts/accountDelete/{id}:
    delete:
      tags:
        - accounts
      summary: Удаление счета АК
      parameters:
        - name: id
          in: path
          description: ID счета АК
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /fias/fiasAll:
    get:
      tags:
        - fias
      summary: Получение списка адресов из справочника ФИАС
      parameters:
        - name: pref
          in: "query"
          description: "ID АК"
          required: true
          schema:
            type: "string"
        - name: "session_id"
          in: "query"
          description: "ID пользователя"
          required: true
          schema:
            type: "integer"
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Fias"
  /fias/fiasSearch:
    get:
      tags:
        - fias
      summary: Поиск адреса в справочнике ФИАС
      parameters:
        - name: search
          in: query
          description: Строка для поиска адреса
          required: true
          schema:
            type: string
        - name: level
          in: query
          description: Уровень адреса ФИАС (1-8)
          required: false
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: object
                    additionalProperties:
                      type: string
  /fias/fiasInfoPut/{id}:
    put:
      tags:
        - fias
      summary: Изменение информации об адресе из справочника ФИАС
      parameters:
        - name: id
          in: "path"
          description: "ID адреса из справочника ФИАС"
          required: true
          schema:
            type: "integer"
      requestBody:
        description: Данные для изменения информации об адресе из справочника ФИАС
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/FiasInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /fias/fiasAdd:
    post:
      tags:
        - fias
      summary: Добавление нового адреса в справочник ФИАС
      requestBody:
        description: Данные для добавления нового адреса в справочник ФИАС
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/FiasInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOkId"
  /fias/fiasDelete/{id}:
    delete:
      tags:
        - fias
      summary: Удаление адреса из справочника ФИАС
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID адреса для удаления
        - in: query
          name: pref
          required: true
          schema:
            type: string
          description: ID АК и символ подчеркивания
        - in: query
          name: session_id
          required: true
          schema:
            type: integer
          description: ID пользователя
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResult"
  /clients/clientAll:
    get:
      tags:
        - clients
      summary: Получение списка клиентов
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objFiass]
          in: query
          description: поиск по ID адреса ФИАС
          schema:
            type: integer
        - name: search[objPerson]
          in: query
          description: поиск по ID ответсвенного пользователя
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: like[address]
          in: query
          description: поиск по адресу
          schema:
            type: string
        - name: like[note]
          in: query
          description: поиск по примечанию
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      operationId: getClientAll
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[name]** => Название клиента
            * **[address]** => Адрес клиента
            * **[objFiass]** => объект. Адрес клиента ФИАСС
            * **[objPerson]** => объект. Ответственный менеджер
            * **[note]** => Примечание к клиенту
            * **[closePeriod]** => Дата границы закрытия клиента
            * **[personClosePeriod]** => кто поставли дату границы закрытия
            * **[dtClosePeriod]** => кто поставил дату границы закрытия
            * **[personClose]** => кто сделал клиента не активным. Ставится автоматом при state=0
            * **[dtClose]** => когда сделали клиента неактивным Ставится автоматом при state=0
            * **[personChange]** => кто внес последние изменения
            * **[dtChange]** => когда внесли последние изменения
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clients/clientInfoPut/{id}:
    put:
      tags:
        - clients
      summary: Изменение информации о клиенте
      operationId: putClientInfo
      parameters:
        - name: id
          in: path
          description: ID клиента для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о клиенте
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clients/clientAdd:
    post:
      tags:
        - clients
      summary: Добавление нового клиента
      operationId: postClientAdd
      requestBody:
        description: Данные для добавления нового клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clients/clientDelete/{id}:
    delete:
      tags:
        - clients
      summary: Удаление клиента по ID
      operationId: deleteClientById
      parameters:
        - name: id
          in: path
          description: ID клиента для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsGroup/clientGroupAll:
    get:
      tags:
        - clients group
      summary: Получение списка групп объектов клиентов
      operationId: getclientGroupAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objClient]
          in: query
          description: поиск по ID клиента
          schema:
            type: integer
        - name: search[objPersonResponsibleGroup]
          in: query
          description: поиск по ID ответственного
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по имени клиента
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[name]** => Название клиента
            * **[state]** => 1-активный, 0- не активный
            * **[objClient]** => объект. Клиент
            * **[objPersonResponsibleGroup]** => объект. Ответственный менеджер
            * **[personChange]** => кто внес последние изменения
            * **[dtChange]** => когда внесли последние изменения
            * **[note]** => Дополнптельная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clientsGroup/clientGroupInfoPut/{id}:
    put:
      tags:
        - clients group
      summary: Изменение информации о группе объектов клиента
      operationId: putclientGroupInfo
      parameters:
        - name: id
          in: path
          description: ID группы объектов клиента для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о группе объектов клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientGroupInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsGroup/clientGroupAdd:
    post:
      tags:
        - clients group
      summary: Добавление новой группы объектов клиента
      operationId: postclientGroupAdd
      requestBody:
        description: Данные для добавления новой группы объектов клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientGroupInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsGroup/clientGroupDelete/{id}:
    delete:
      tags:
        - clients group
      summary: Удаление группы объектов клиента по ID
      operationId: deleteclientGroupById
      parameters:
        - name: id
          in: path
          description: ID группы объектов клиента для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsObject/clientObjectAll:
    get:
      tags:
        - clients object
      summary: Получение списка объектов клиентов
      operationId: getclientObjectAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objClient]
          in: query
          description: поиск по ID клиента
          schema:
            type: integer
        - name: search[objGroup]
          in: query
          description: поиск по ID группы
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию объекта
          schema:
            type: string
        - name: like[address]
          in: query
          description: поиск по адресу
          schema:
            type: string
        - name: search[objPersonResponsibleObject]
          in: query
          description: поиск по ID ответсвенного пользователя
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[name]** => Название объекта
            * **[objGroup]** => объект. Группа
            * **[objClient]** => объект. Клиент
            * **[address]** => Адрес объекта
            * **[objFiass]** => объект. Адрес объекта ФИАСС
            * **[geoLat]** => Координаты широта
            * **[geoLon]** => Координаты долгота
            * **[timeZone]** => Часовой пояс
            * **[objPersonResponsibleObject]** => объект. Ответственный менеджер
            * **[note]** => Дополнительная информация
            * **[attention]** => Внимание          
            * **[closePeriod]** => Дата границы закрытия клиента
            * **[personClosePeriod]** => кто поставли дату границы закрытия
            * **[dtClosePeriod]** => кто поставил дату границы закрытия
            * **[personClose]** => кто сделал объект не активным. Ставится автоматом при state=0
            * **[dtClose]** => когда сделали объект неактивным Ставится автоматом при state=0
            * **[personChange]** => кто внес последние изменения
            * **[dtChange]** => когда внесли последние изменения
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clientsObject/clientObjectInfoPut/{id}:
    put:
      tags:
        - clients object
      summary: Изменение информации об объекте клиента
      operationId: putclientObjectInfo
      parameters:
        - name: id
          in: path
          description: ID объекта клиента для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации об объекте клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientObjectInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsObject/clientObjectAdd:
    post:
      tags:
        - clients object
      summary: Добавление нового объекта клиента
      operationId: postclientObjectAdd
      requestBody:
        description: Данные для добавления нового объекта клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientObjectInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsObject/clientObjectDelete/{id}:
    delete:
      tags:
        - clients object
      summary: Удаление объекта клиента по ID
      operationId: deleteclientObjectById
      parameters:
        - name: id
          in: path
          description: ID объекта клиента для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsDepartment/clientDepartmentAll:
    get:
      tags:
        - clients department
      summary: Получение списка отделов объектов клиентов
      operationId: getclientDepartmentAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objObject]
          in: query
          description: поиск по ID объекта
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию подразделения
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clientsDepartment/clientDepartmentInfoPut/{id}:
    put:
      tags:
        - clients department
      summary: Изменение информации об отделе объекта клиента
      operationId: putclientDepartmentInfo
      parameters:
        - name: id
          in: path
          description: ID отдела объекта клиента для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации об отделе объекта клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientDepartmentInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsDepartment/clientDepartmentAdd:
    post:
      tags:
        - clients department
      summary: Добавление нового отдела объекта клиента
      operationId: postclientDepartmentAdd
      requestBody:
        description: Данные для добавления нового отдела объекта клиента
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientDepartmentInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsDepartment/clientDepartmentDelete/{id}:
    delete:
      tags:
        - clients department
      summary: Удаление отдела объекта клиента по ID
      operationId: deleteclientDepartmentById
      parameters:
        - name: id
          in: path
          description: ID отдела объекта клиента для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsRate/clientRateAll:
    get:
      tags:
        - clients rate
      summary: Получение списка ставок
      operationId: getclientRateAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objSpeciality]
          in: query
          description: поиск по ID специализации
          schema:
            type: integer
        - name: search[objObject]
          in: query
          description: поиск по ID объекта
          schema:
            type: integer
        - name: search[objGroup]
          in: query
          description: поиск по ID группы объектов
          schema:
            type: integer            
        - name: search[objClient]
          in: query
          description: поиск по ID клиента
          schema:
            type: integer  
        - name: search[objDepartment]
          in: query
          description: поиск по ID подразделения
          schema:
            type: integer            
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clientsRate/clientRateInfoPut/{id}:
    put:
      tags:
        - clients rate
      summary: Изменение информации о ставке
      operationId: putclientRateInfo
      parameters:
        - name: id
          in: path
          description: ID ставки для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о ставке
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientRateInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsRate/clientRateAdd:
    post:
      tags:
        - clients rate
      summary: Добавление новой ставки
      operationId: postclientRateAdd
      requestBody:
        description: Данные для добавления новой ставки
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientRateInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsRate/clientRateDelete/{id}:
    delete:
      tags:
        - clients rate
      summary: Удаление ставки по ID
      operationId: deleteclientRateById
      parameters:
        - name: id
          in: path
          description: ID ставки для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsReq/clientReqAll:
    get:
      tags:
        - clients req
      summary: Получение списка базовых требований к ЛП
      operationId: getclientReqAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[gender]
          in: query
          description: поиск по полу (допустимые значения male/female)
          schema:
            type: string
        - name: search[national]
          in: query
          description: поиск по гражданству
          schema:
            type: integer
        - name: search[passport]
          in: query
          description: поиск по наличию паспорта
          schema:
            type: integer
        - name: search[med]
          in: query
          description: поиск по наличию мед книжки
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /clientsReq/clientReqInfoPut/{id}:
    put:
      tags:
        - clients req
      summary: Изменение информации о требованиях к ЛП
      operationId: putclientReqInfo
      parameters:
        - name: id
          in: path
          description: ID требований к ЛП для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о требованиях к ЛП
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsReq/clientReqAdd:
    post:
      tags:
        - clients req
      summary: Добавление новых требований к ЛП
      operationId: postclientReqAdd
      requestBody:
        description: Данные для добавления новых требований к ЛП
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/clientReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /clientsReq/clientReqDelete/{id}:
    delete:
      tags:
        - clients req
      summary: Удаление требований к ЛП по ID
      operationId: deleteclientReqById
      parameters:
        - name: id
          in: path
          description: ID требований к ЛП для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /globalReq/globalReqAll:
    get:
      tags:
        - global req
      summary: Получение списка расширенных и клиентозависимых требований
      operationId: getglobalReqAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[clients]
          in: query
          description: поиск по признаку клиентозависимый
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу
          schema:
            type: integer
        - name: search[hidden]
          in: query
          description: поиск по признаку скрытый
          schema:
            type: integer
        - name: search[required]
          in: query
          description: поиск по признаку строгий
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/globalReq"
  /globalReq/globalReqInfoPut/{id}:
    put:
      tags:
        - global req
      summary: Изменение информации о расширенном или клиентозависимом требовании
      operationId: putglobalReqInfo
      parameters:
        - name: id
          in: path
          description: ID требования
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о требованиях 
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/globalReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /globalReq/globalReqAdd:
    post:
      tags:
        - global req
      summary: Добавление нового вида расширенного или клиентозависимого требования 
      operationId: postglobalReqAdd
      requestBody:
        description: Данные для добавления нового вида требования
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/globalReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /globalReq/globalReqDelete/{id}:
    delete:
      tags:
        - global req
      summary: Удаление расширенного или клиентозависимого требования по ID
      operationId: deleteglobalReqById
      parameters:
        - name: id
          in: path
          description: ID требований для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setReqAll:
    get:
      tags:
        - set req
      summary: Получение списка наборов расширенных и клиентозависимых требований
      operationId: getsetReqAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /setReq/setReqInfoPut/{id}:
    put:
      tags:
        - set req
      summary: Изменение информации о наборе расширенном или клиентозависимом требовании
      operationId: putsetReqInfo
      parameters:
        - name: id
          in: path
          description: ID требования
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о наборе требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/setReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setReqAdd:
    post:
      tags:
        - set req
      summary: Добавление нового набора расширенного или клиентозависимого требования 
      operationId: postsetReqAdd
      requestBody:
        description: Данные для добавления нового набора требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/setReqInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setReqDelete/{id}:
    delete:
      tags:
        - set req
      summary: Удаление набора расширенного или клиентозависимого требования по ID
      operationId: deletesetReqById
      parameters:
        - name: id
          in: path
          description: ID набора требований для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setRequirementAdd:
    post:
      tags:
        - set req
      summary: Добавление расширенного или клиентозависимого требования в набор
      operationId: postsetRequirementAdd
      requestBody:
        description: Данные для добавления нового набора требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/setRequirementInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setRequirementDelete:
    delete:
      tags:
        - set req
      summary: Удаление расширенного или клиентозависимого требования из набора
      operationId: deletesetRequrementById
      parameters:
        - name: idSet
          in: query
          description: ID набора требований
          required: true
          schema:
            type: integer
            format: int32
        - name: idRequirement
          in: query
          description: ID требования
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /setReq/setRequirementChange:
    post:
      tags:
        - set req
      summary: Добавление расширенного или клиентозависимого требования в набор
      operationId: postsetRequirementChange
      requestBody:
        description: Данные для добавления нового набора требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  type: object
                  properties:
                    idRequest:
                      description: "ID заказа"
                      type: integer
                    requirements:
                      description: "массив требований"
                      type: object
                      properties:
                        idRequirement:
                          $ref: "#/components/schemas/setRequirementChange"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /TypeUnits/TypeUnitAll:
    get:
      tags:
        - type units
      summary: Получение списка единиц измерения
      operationId: getTypeUnitAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: like[nameFull]
          in: query
          description: поиск названию
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /TypeUnits/TypeUnitInfoPut/{id}:
    put:
      tags:
        - type units
      summary: Изменение информации об единице измерения
      operationId: putTypeUnitInfo
      parameters:
        - name: id
          in: path
          description: ID единицы измерения для изменения информации
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации об единице измерения
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/TypeUnitInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /TypeUnits/TypeUnitAdd:
    post:
      tags:
        - type units
      summary: Добавление новой единицы измерения
      operationId: postTypeUnitAdd
      requestBody:
        description: Данные для добавления новой единицы измерения
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/TypeUnitInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /TypeUnits/TypeUnitDelete/{id}:
    delete:
      tags:
        - type units
      summary: Удаление единицы измерения по ID
      operationId: deleteTypeUnitById
      parameters:
        - name: id
          in: path
          description: ID единицы измерения для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
                
  /typeContract/typeContractAll:
    get:
      tags:
        - typeContract
      summary: Получение списка типов договоров
      operationId: gettypeContractAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск названию
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[dtChange]** => изменено
            * **[idPersonChange]** => Изменил
            * **[state]** => 1-активный, 0- не активный
            * **[name]** => Название
            * **[note]** => Дополнительнгая информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /typeContract/typeContractInfoPut/{id}:
    put:
      tags:
        - typeContract
      summary: Изменение информации о типе договора
      operationId: puttypeContractInfo
      parameters:
        - name: id
          in: path
          description: ID 
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации 
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeContractInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeContract/typeContractAdd:
    post:
      tags:
        - typeContract
      summary: Добавление нового типа договора
      operationId: posttypeContractAdd
      requestBody:
        description: Данные для добавления нового типа
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeContractInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeContract/typeContractDelete/{id}:
    delete:
      tags:
        - typeContract
      summary: Удаление типа договора по ID
      operationId: deletetypeContractById
      parameters:
        - name: id
          in: path
          description: ID типа договора для удаления
          required: true
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpLead/lpLeadAll:
    get:
      tags:
        - lpLead
      summary: Описывает лиды
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активная, 0- неактивная
            * **[dtChange]** => когда вносили последние изменения
            * **[personChange]** => кто вносил последние изменения
            * **[name]** => Имя
            * **[address]** => Адрес
            * **[mail]** => электронная почта
            * **[phone]** => телефон
            * **[objSource]** => Источник
            * **[objCondition]** => Состояние
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpLead/lpLeadInfoPut/{id}:
    put:
      tags:
        - lpLead
      summary: Изменение данны лида.
      parameters:
        - name: id
          in: path
          description: ID 
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о лиде
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpLeadInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpLead/lpLeadAdd:
    post:
      tags:
        - lpLead
      summary: Добавление лида
      requestBody:
        description: Данные для добавления лида
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpLeadInput"
      responses:
        "200":
          description: Успешное добавление физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpLead/lpLeadDelete/{id}:
    delete:
      tags:
        - lpLead
      summary: Удаление лида
      parameters:
        - name: id
          in: path
          description: ID лида
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpMan/lpManAll:
    get:
      tags:
        - IpMan
      summary: Описывает физические лица
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[sname]** => Фамилия
            * **[name]** => Имя
            * **[mname]** => Отчество
            * **[arrPhoto]** => массив URL к текущей фотографии [original],[512],[128]
            * **[bd]** => дата рождения
            * **[gender]** => пол
            * **[phone]** => контактный телефон
            * **[phone2]** => дополнительный телефон
            * **[mail]** => электронная почта
            * **[address]** => адрес в виде текста
            * **[note]** => дополнительная инфолрмация
            * **[objLead]** => объек Привзяанный лид
            * **[arrObjNotes]** => массив объектов Комментарии
            * **[arrObjDocs]** => массив объеутов Документы
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpMan/lpManInfoPut/{id}:
    put:
      tags:
        - IpMan
      summary: Изменение данных физического лица.
      parameters:
        - name: id
          in: path
          description: ID физического лица
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о физическом лице
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/IpManInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpMan/lpManPhotoPut:
    put:
      tags:
        - IpMan
      summary: Добавление фотографии физического лица.
      requestBody:
        description: Данные для добавления
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                idMan:
                  description: "ID физ лица"
                  type: integer
                name:
                  description: имя файла
                  type: string
                type:
                  description: расширение файла
                  type: string   
                file:
                  description: содержимое файла в текстовом виде
                  type: string                
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpMan/lpManPhotoGet:
    get:
      tags:
        - IpMan
      summary: Описывает физические лица
      parameters:
        - name: search[idMan]
          in: query
          description: поиск по ID физ.лица
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
  /lpMan/lpManAdd:
    post:
      tags:
        - IpMan
      summary: Добавление физического лица
      requestBody:
        description: Данные для добавления физического лица
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/IpManInput"
      responses:
        "200":
          description: Успешное добавление физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpMan/lpManDelete/{id}:
    delete:
      tags:
        - IpMan
      summary: Удаление физического лица
      parameters:
        - name: id
          in: path
          description: ID физического лица
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpWorkers/lpWorkerAll:
    get:
      tags:
        - lpWorker
      summary: Описывает исполнителей 
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[active]
          in: query
          description: поиск активных = yes
          schema:
            type: string  
        - name: like[fio]
          in: query
          description: поискпо ФИО
          schema:
            type: string  
        - name: search[gender]
          in: query
          description: поискпо полу
          schema:
            type: string  
        - name: search[med]
          in: query
          description: поиск по действующей мед книжке = yes
          schema:
            type: string  
        - name: search[speciality]
          in: query
          description: поиск по ID специализации. ID указываются в виде JSON , например [1] или перечня [1,3,6]
          schema:
            type: string  
        - name: search[skill]
          in: query
          description: поиск по ID скилов. ID указываются в виде JSON , например [1] или перечня [1,3,6]
          schema:
            type: string  
        - name: search[objMan]
          in: query
          description: поиск по ID физического лица
          schema:
            type: integer
        - name: like[number]
          in: query
          description: поиск по учетному номеру
          schema:
            type: string            
        - name: like[dtBegin]
          in: query
          description: поиск по дате начала работы
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: поиск по дате окончания работы
          schema:
            type: string
        - name: like[dtPause]
          in: query
          description: поиск по дате заморожен до
          schema:
            type: string
        - name: like[dtCandidate]
          in: query
          description: поиск по дате кандидат
          schema:
            type: string        
        - name: search[dtFree]
          in: query
          description: поиск своодных исполнителей на дату ГГГГ-мм-дд
          schema:
            type: string
        - name: search[idClient]
          in: query
          description: поиск исполнителей, когда-либо работающих у клиента idClient
          schema:
            type: string
        - name: search[idObject]
          in: query
          description: поиск исполнителей, когда-либо работающих на объекте idObject
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- неактивный
            * **[personChange]** => кто вносил последние изменения
            * **[dtChange]** => когда вносили последние изменения
            * **[fio]** => ФИО 
            * **[gender]** => пол male/female
            * **[objMan]** => объект. Физическое лицо
            * **[number]** => учетный номер
            * **[dtBegin]** => дата начала работы
            * **[dtEnd]** => дата окончания работы
            * **[dtPause]** => дата, до которой заморожен
            * **[dtCandidate]** => дата Кандидат
            * **[note]** => примечание
            * **[attention]** => особые пометки
            * **[arrObjContract]** => массив объектов. Контракты
            * **[arrObjSpeciality]** => массив объектов. Специализации
            * **[arrSkill]** => объект. Навыки исполнителя
            * **[medBook]** => наличие действующей медкнижки
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpWorkers/lpWorkerInfoPut/{id}:
    put:
      tags:
        - lpWorker
      summary: Изменение данных исполнителя.
      parameters:
        - name: id
          in: path
          description: ID исполнителя
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации об исполнителе
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/WorkerInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpWorkers/lpWorkerAdd:
    post:
      tags:
        - lpWorker
      summary: Добавление исполнителя
      requestBody:
        description: Данные для добавления исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/WorkerInput"
      responses:
        "200":
          description: Успешное добавление исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpWorkers/lpWorkerDelete/{id}:
    delete:
      tags:
        - lpWorker
      summary: Удаление исполнителя
      parameters:
        - name: id
          in: path
          description: ID исполнителя
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpContracts/lpContractAll:
    get:
      tags:
        - lpContract
      summary: Описывает договора исполнителя 
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[objWorker]
          in: query
          description: поиск по ID исполнителя
          schema:
            type: integer
        - name: search[objCompany]
          in: query
          description: поиск по ID компании
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу
          schema:
            type: integer
        - name: edo
          in: query
          description: ЭДО
          schema:
            type: integer
        - name: like[dtBegin]
          in: query
          description: поиск по дате начала 
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: поиск по дате окончания
          schema:
            type: string 
        - name: like[dtContractSign]
          in: query
          description: поиск по дате контракта
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[objWorker]** => объект Исполнитель
            * **[objCompany]** => объект Организация
            * **[state]** => 1-активный, 0- не активный
            * **[type]** => Тип договора
            * **[edo]** => ЭДО 1-да, 0- нет
            * **[dtBegin]** => Начало действия
            * **[dtEnd]** => Окончание действия
            * **[dtContractSign]** => Дата подписания            
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpContracts/lpContractInfoPut/{id}:
    put:
      tags:
        - lpContract
      summary: Изменение данных договора исполнителя.
      parameters:
        - name: id
          in: path
          description: ID договора
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о договоре исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ContractInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpContracts/lpContractAdd:
    post:
      tags:
        - lpContract
      summary: Добавление договора исполнителя
      requestBody:
        description: Данные для добавления договора исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ContractInput"
      responses:
        "200":
          description: Успешное добавление договора исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpContracts/lpContractDelete/{id}:
    delete:
      tags:
        - lpContract
      summary: Удаление договора исполнителя
      parameters:
        - name: id
          in: path
          description: ID договора
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление договора исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSpeciality/lpSpecialityAll:
    get:
      tags:
        - lpSpeciality
      summary: Описывает специализации исполнителя с
      parameters:
        - name: search[idWorker]
          in: query
          description: ID работника 
          schema:
            type: integer
        - name: search[idSpeciality]
          in: query
          description: ID специализации
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpSpeciality/lpSpecialityInfoPut:
    put:
      tags:
        - lpSpeciality
      summary: Изменение данных специализации исполнителя.
      requestBody:
        description: Данные для изменения информации о специализации исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpSpecialityInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSpeciality/lpSpecialityAdd:
    post:
      tags:
        - lpSpeciality
      summary: Добавление специализации исполнителя
      requestBody:
        description: Данные для добавления специализации исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpSpecialityInput"
      responses:
        "200":
          description: Успешное добавление специализации исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSpeciality/lpSpecialityDelete/:
    delete:
      tags:
        - lpSpeciality
      summary: Удаление специализации исполнителя
      parameters:
        - name: idSpeciality
          in: query
          description: ID специализации
          required: true
          schema:
            type: integer
        - name: idWorker
          in: query
          description: ID исполнителя
          required: true
          schema:
            type: integer            
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление специализации исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpAccount/lpAccountAll:
    get:
      tags:
        - lpAccount
      summary: Описывает счета исполнителя 
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[idWorker]
          in: query
          description: поиск ID работника 
          schema:
            type: integer
        - name: search[main]
          in: query
          description: поиск по основной
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу
          schema:
            type: integer
        - name: like[card]
          in: query
          description: поиск по номеру карты
          schema:
            type: string
        - name: like[bankName]
          in: query
          description: поиск по названию банка
          schema:
            type: string
        - name: like[bankBik]
          in: query
          description: поиск по БИК
          schema:
            type: string
        - name: like[account]
          in: query
          description: поиск по номеру счета
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- не активный
            * **[dtChange]** => дата/время последнего изменения
            * **[idPersonChange]** => кто вносил последние изменения 
            * **[idWorker]** => ID Исполнителя
            * **[main]** => 1-основной, 0- не основной
            * **[type]** => Тип 0- наличные, 1- без.нал
            * **[card]** => номер карты
            * **[bankName]** => Банк название
            * **[bankBik]** => Банк БИК       
            * **[account]** => Банк номер счета
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpAccount/lpAccountInfoPut/{id}:
    put:
      tags:
        - lpAccount
      summary: Изменение данных счета исполнителя.
      parameters:
        - name: id
          in: path
          description: ID счета
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о счете исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpAccountInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpAccount/lpAccountAdd:
    post:
      tags:
        - lpAccount
      summary: Добавление счета исполнителя
      requestBody:
        description: Данные для добавления счета исполнителя
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpAccountInput"
      responses:
        "200":
          description: Успешное добавление счета исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpAccount/lpAccountDelete/{id}:
    delete:
      tags:
        - lpAccount
      summary: Удаление счета исполнителя
      parameters:
        - name: id
          in: path
          description: ID счета
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление счета исполнителя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpDoc/lpDocAll:
    get:
      tags:
        - lpDoc
      summary: Описывает документы физического лица 
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID 
          schema:
            type: integer
        - name: search[idMan]
          in: query
          description: поиск по ID физического лица
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpDoc/lpDocInfoPut/{id}:
    put:
      tags:
        - lpDoc
      summary: Изменение данных документа физического лица.
      parameters:
        - name: id
          in: path
          description: ID документа
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о документе физического лица
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/DocInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpDoc/lpDocAdd:
    post:
      tags:
        - lpDoc
      summary: Добавление документа физического лица
      requestBody:
        description: Данные для добавления документа физического лица
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/DocInput"
      responses:
        "200":
          description: Успешное добавление документа физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpDoc/lpDocDelete/{id}:
    delete:
      tags:
        - lpDoc
      summary: Удаление документа физического лица
      parameters:
        - name: id
          in: path
          description: ID документа
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление документа физического лица
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpNote/lpNoteAll:
    get:
      tags:
        - lpNote
      summary: Описывает комментарии к физическому лицу 
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[idMan]
          in: query
          description: поиск по ID физического лица
          schema:
            type: integer
        - name: search[importance]
          in: query
          description: поиск по важности
          schema:
            type: integer
        - name: like[note]
          in: query
          description: поиск по описанию
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpNote/lpNoteInfoPut/{id}:
    put:
      tags:
        - lpNote
      summary: Изменение данных комментария к физическому лицу.
      parameters:
        - name: id
          in: path
          description: ID комментария
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о комментарии к физическому лицу
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/NoteInput"
      responses:
        "200":
          description: Успешное изменение данных.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpNote/lpNoteAdd:
    post:
      tags:
        - lpNote
      summary: Добавление комментария к физическому лицу
      requestBody:
        description: Данные для добавления комментария к физическому лицу
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/NoteInput"
      responses:
        "200":
          description: Успешное добавление комментария к физическому лицу
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpNote/lpNoteDelete/{id}:
    delete:
      tags:
        - lpNote
      summary: Удаление комментария к физическому лицу
      parameters:
        - name: id
          in: path
          description: ID комментария
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление комментария к физическому лицу
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSkill/lpSkillAll:
    get:
      tags:
        - lpSkill
      summary: Получение списка навыков
      operationId: getlpSkillAll
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[idWorker]
          in: query
          description: поиск по ID исполнителя
          schema:
            type: integer
        - name: search[idSkill]
          in: query
          description: поиск по ID навыка
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[idPersonChange]** => кто изменил
            * **[dtChange]** => дата изменения            
            * **[state]** => 1-активный, 0- не активный. По умолчанию только активные
            * **[objSkill]** => объект Навык
            * **[idWorker]** => ID Исполнителя
            * **[arrClient]** => массив Клиенты для клиентозависимого навыка
            * **[note]** => Дополнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /lpSkill/lpSkillInfoPut/{id}:
    put:
      tags:
        - lpSkill
      summary: Изменение информации о навыке
      operationId: putlpSkillInfo
      parameters:
        - name: id
          in: path
          description: ID возможности
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Данные для изменения информации о наборе требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpSkillInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSkill/lpSkillAdd:
    post:
      tags:
        - lpSkill
      summary: Добавление нового набора расширенных возможностей 
      operationId: postlpSkillAdd
      requestBody:
        description: Данные для добавления нового набора требований
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/lpSkillInput"
        required: true
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /lpSkill/lpSkillDelete:
    delete:
      tags:
        - lpSkill
      summary: Удаление навыка по idWorker , idSkill, idClient
      operationId: deletelpSkillById
      parameters:
        - name: idSkill
          in: query
          description: ID навыка
          required: true
          schema:
            type: integer
            format: int32
        - name: idWorker
          in: query
          description: ID исполнителя
          required: true
          schema:
            type: integer
            format: int32
        - name: idClient
          in: query
          description: ID клиента
          schema:
            type: integer
            format: int32
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /orders/OrderInfoPut/{id}:
    put:
      tags:
        - orders
      summary: Изменение информации о заказе
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о заказе
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/OrderInput"
      responses:
        "200":
          description: Успешный ответ
  /orders/OrderAll:
    get:
      tags:
        - orders
      summary: Получение списка заказов
      description: по умолчанию применяется поиск дате заявок,привязанных к заказу, начиная с текущего месяца, т.е. с 1 числа текущего месяца
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID (поиск по датам удаляется)
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objClient]
          in: query
          description: поиск ID клиента
          schema:
            type: integer
        - name: like[dtBegin]
          in: query
          description: поиск дате заявок,привязанных к заказу, от 
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: поиск дате заявок,привязанных к заказу, до
          schema:
            type: string     
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID заказа
            * **[state]** => 1-активный, 0- неактивный
            * **[objClient]** => объект Клиент
            * **[note]** => дополнительная информация
            * **[cntRequests]** => кол-во заявок по этому Заказу
            * **[dtMin]** => минимальная дата заявок
            * **[dtMax]** => максимальная дата заявок
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /orders/OrderAdd:
    post:
      tags:
        - orders
      summary: Добавление заказа
      requestBody:
        description: Данные для добавления заказа
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/OrderInput"
      responses:
        "200":
          description: Успешный ответ
  /orders/OrderDelete/{id}:
    delete:
      tags:
        - orders
      summary: Удаление заказа
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /ordersReq/orderReqInfoPut/{id}:
    put:
      tags:
        - ordersReq
      summary: Изменение информации о требованиях к ЛП по заявке
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о требованиях к ЛП по заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/OrderReqInput"
      responses:
        "200":
          description: Успешный ответ
  /ordersReq/orderReqAll:
    get:
      tags:
        - ordersReq
      summary: Получение списка требований к ЛП по заявкам
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objRequest]
          in: query
          description: поиск по ID заявки
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /ordersReq/orderReqAdd:
    post:
      tags:
        - ordersReq
      summary: Добавление требований к ЛП по заявке
      requestBody:
        description: Данные для добавления требований к ЛП по заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/OrderReqInput"
      responses:
        "200":
          description: Успешный ответ
  /ordersReq/orderReqDelete/{id}:
    delete:
      tags:
        - ordersReq
      summary: Удаление требований к ЛП по заявке
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /requests/RequestInfoPut/{id}:
    put:
      tags:
        - requests
      summary: Изменение информации о заявке. При изменении идет проверка на соответсвие idOrder и idObject (клиента и объекта), idRate и idObject (ставки/подразделения и объекта)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/RequestInput"
      responses:
        "200":
          description: Успешный ответ
  /requests/RequestAll:
    get:
      tags:
        - requests
      summary: Получение списка заявок
      description: по умолчанию применяется поиск дате заведения заявок, начиная с  текущего месяца, т.е. с 1 числа текущего месяца
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID (поиск по датам удаляются)
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objOrder]
          in: query
          description: поиск по ID заказа или массив заказов search[objOrder][id1,id3,id5]
          schema:
            type: integer
        - name: search[objObject]
          in: query
          description: поиск по ID объекта или массив объектов search[objObject][id1,id3,id5]
          schema:
            type: integer
        - name: search[idGroup]
          in: query
          description: поиск по ID группы объектов
          schema:
            type: integer
        - name: search[idClient]
          in: query
          description: поиск по ID клиента
          schema:
            type: integer
        - name: search[objRate]
          in: query
          description: поиск по ID ставки
          schema:
            type: integer
        - name: like[dtBegin]
          in: query
          description: поиск по дате заявки от 
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: поиск по дате заявки до
          schema:
            type: string        
        - name: like[alert]
          in: query
          description: поиск по полю Внимание
          schema:
            type: string  
        - name: like[minPercent]
          in: query
          description: поиск по заполненности заявки 
          schema:
            type: string
        - name: like[maxPercent]
          in: query
          description: поиск по заполненности заявки
          schema:
            type: string    
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID заявки
            * **[state]** => 1-активная, 0- неактивная
            * **[personChange]** => кто вносил последние изменения
            * **[dtChange]** => когда вносили последние изменения
            * **[alert]** => поле Внимание
            * **[objOrder]** => объект Заказ
            * **[objObject]** => объект Объект клиента
            * **[idGroup]** => id группы, к которой относится объект
            * **[idClient]** => id клиента
            * **[dtBegin]** => дата начала заявки
            * **[dtEnd]** => дата окончания заявки
            * **[cnt]** => кол-во смен
            * **[objRate]** => объект Ставка
            * **[objRequirement]** => объект отдельные требования к заявке
            * **[cntShift]** => кол-во назначенных смен
            * **[note]** => допролнительная информация
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /requests/RequestAdd:
    post:
      tags:
        - requests
      summary: Добавление заявки
      requestBody:
        description: Данные для добавления заявки. При добавлении идет проверка на соответсвие idOrder и idObject (клиента и объекта), idRate и idObject (ставки/подразделения и объекта)
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/RequestInput"
      responses:
        "200":
          description: Успешный ответ
  /requests/RequestDelete/{id}:
    delete:
      tags:
        - requests
      summary: Удаление заявки
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestInput"
  /shifts/ShiftInfoPut/{id}:
    put:
      tags:
        - shifts
      summary: Изменение информации о смене
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о смене
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ShiftInput"
      responses:
        "200":
          description: Успешный ответ
  /shifts/ShiftAll:
    get:
      tags:
        - shifts
      summary: Получение списка смен
      description: по умолчанию применяется поиск дате смены, за текущий месяц, т.е. с 1 числа текущего месяца
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID (поиск по датам удаляются)
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objRequest]
          in: query
          description: поиск по ID заявки
          schema:
            type: integer
        - name: search[objContract]
          in: query
          description: поиск по ID контракта-информация по исполнителю
          schema:
            type: integer
        - name: search[objTypeUnit]
          in: query
          description: поиск по ID типа единицы измерения
          schema:
            type: integer
        - name: like[dtBegin]
          in: query
          description: поиск по фактической дате заявки от 
          schema:
            type: string
        - name: like[dtEnd]
          in: query
          description: поиск по фактической дате заявки до
          schema:
            type: string        
        - name: like[planDtBegin]
          in: query
          description: поиск по планируемой дате заявки от 
          schema:
            type: string
        - name: like[planDtEnd]
          in: query
          description: поиск по планируемой дате заявки до
          schema:
            type: string  
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активная, 0- неактивная
            * **[personChange]** => кто вносил последние изменения
            * **[dtChange]** => когда вносили последние изменения
            * **[personPlan]** => кто спланировал смену
            * **[dtPlan]** => когда спланировали смену
            * **[personRemove]** => кто отменил смену
            * **[dtRemove]** => когда отменили смену
            * **[objRequest]** => объект Заявка
            * **[objContract]** => объект Контракт исполнителя
            * **[arrObjBalance]** => массив объектов Начислениия по смене
            * **[dtBegin]** => дата начала смены, указывается менеджером
            * **[dtEnd]** => дата конца смены, указывается менеджером
            * **[cntHour]** => кол-во часов, указывается менеджером
            * **[costHour]** => кол-во оплачиваемых часов, указывается менеджером
            * **[cnt]** => кол-во единиц сделки, указывается менеджером
            * **[planDtBegin]** => планируемая дата начала смены, берется из Заявки, не меняется
            * **[planDtEnd]** => планируемая дата конца смены, берется из Заявки, не меняется
            * **[planCntHour]** => планируемое кол-во часов, берется из ставки, не меняется
            * **[planCostHour]** => планируемое кол-во оплачиваемых часов, берется из ставки, не меняется
            * **[planCnt]** => планируемое кол-во единиц. Не знаю откуда берется )
            * **[planRateHour]** => планируемая цена за час, берется из Ставки, не меняется
            * **[planRateDay]** => планируемая цена за смену, берется из Ставки, не меняется
            * **[objPlanTypeUnit]** => объект. Планируемый тип единицы, берется из Ставки, не меняется
            * **[planRateUnit]** => планируемая цена за единицу, берется из Ставки, не меняется
            * **[planSum]** => Планируемая оплата за смену. Вычисляется при каждом запросе из полей типа plan
            * **[objTypeUnitShift]** => объект тип единицы для сделки
            * **[note]** => примечание
            * **[shiftStatus]** => текущий статус смены
            * **[shiftStatusDescription]** => описание текущего статуса смены
            * **[objPlanSpeciality]** => объект Планиуемая специальность исполнителя 
            * **[sum]** => Сумма за часы или смену. Указывается менеджером. Попадает в начисления при сохранении смены. 
            * **[sumUnit]** => Сумма за единицы (сделку). Указывается менеджером
            * **[sumBalance]** => Общая сумма активных начислений по смене (state=1). Складывается из sum в начислениях.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /shifts/ShiftAdd:
    post:
      tags:
        - shifts
      summary: Добавление смены
      requestBody:
        description: Данные для добавления смены
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/ShiftInput"
      responses:
        "200":
          description: Успешный ответ
  /shifts/ShiftDelete/{id}:
    delete:
      tags:
        - shifts
      summary: Удаление смены
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payPay/payPayInfoPut/{id}:
    put:
      tags:
        - paypay
      summary: Изменение информации о выплате исполнителю
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о выплате исполнителю
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayPayInput"
      responses:
        "200":
          description: Успешный ответ
  /payPay/payPayAll:
    get:
      tags:
        - paypay
      summary: Получение списка выплат исполнителям
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID (поиск по датам удаляются)
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[objAccount]
          in: query
          description: поиск по ID счета АК
          schema:
            type: integer
        - name: search[objLpAccount]
          in: query
          description: поиск по ID счета исполнителя
          schema:
            type: integer
        - name: search[from]
          in: query
          description: дата выплаты от 
          schema:
            type: string
        - name: search[to]
          in: query
          description: дата выплаты до
          schema:
            type: string   
        - name: search[dtPay]
          in: query
          description: поиск по дате выплаты 
          schema:
            type: string   
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /payPay/payPaySignature/{id}:
    put:
      tags:
        - paypay
      summary: подтверждение выплаты
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: данные для подтверждения выплаты
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
      responses:
        "200":
          description: Успешный ответ
  /payPay/payPayAdd:
    post:
      tags:
        - paypay
      summary: Добавление выплаты исполнителю
      requestBody:
        description: Данные для добавления выплаты исполнителю
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayPayInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payPay/payPayDelete/{id}:
    delete:
      tags:
        - paypay
      summary: Удаление выплаты исполнителю
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payBalance/payBalanceNow:
    get:
      tags:
        - payBalance
      summary: Получение текущего баланса исполнителя
      parameters:
        - name: id_worker
          in: query
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Balance"
  /payBalance/payBalanceRate:
    get:
      tags:
        - payBalance
      summary: Вычисление суммы вознаграждения по отработанной смене в зависимости от ставки
      parameters:
        - name: search[idRate]
          in: query
          required: true
          schema:
            type: integer
        - name: search[idShift]
          in: query
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Summ"
  /payBalance/payBalanceRatePlan:
    get:
      tags:
        - payBalance
      summary: Вычисление суммы вознаграждения по планируемой смене в зависимости от ставки
      parameters:
        - name: search[idRate]
          in: query
          required: true
          schema:
            type: integer
        - name: search[idShift]
          in: query
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Summ"
  /payBalance/payBalanceRateShift:
    get:
      tags:
        - payBalance
      summary: вычисление суммы оплаты из полей смены по фактически введенным данным менеджером
      parameters:
        - name: search[idShift]
          in: query
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Summ"
  /payBalance/payBalanceAll:
    get:
      tags:
        - payBalance
      summary: Получение множественных данных о денежных операциях начислений
      description: по умолчанию применяется поиск дате начисления , за текущий месяц, т.е. с 1 числа текущего месяца
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID (поиск по датам удаляются)
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: like[dt]
          in: query
          description: поиск по дате платежа
          schema:
            type: string
        - name: like[dtFrom]
          in: query
          description: поиск по дате платежа от 
          schema:
            type: string
        - name: like[dtTo]
          in: query
          description: поиск по дате платежа до
          schema:
            type: string   
        - name: search[objContract]
          in: query
          description: поиск по ID контракта
          schema:
            type: integer
        - name: search[objRate]
          in: query
          description: поиск по ID ставки
          schema:
            type: integer
        - name: search[objType]
          in: query
          description: поиск ID типа начислений
          schema:
            type: integer
        - name: search[idOperation]
          in: query
          description: поиск по ID операции (смены для начисления за смену)
          schema:
            type: integer
        - name: like[nameOperation]
          in: query
          description: поиск по имени типа операции
          schema:
            type: string   
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активная, 0- неактивная
            * **[personChange]** => кто вносил последние изменения
            * **[dtChange]** => когда вносили последние изменения
            * **[personSignature]** => кто утвердил начисление
            * **[dtSignature]** => когда утвердили начисление
            * **[dt]** => дата начисления
            * **[objType]** => объект. Тип начисления
            * **[objContract]** => объект. Контракт
            * **[idOperation]** => ID записи из таблицы, указанной в nameOperation - привязка начисления к какому-либо действию. Например для начисления Вознаграждение за смену- idOperation= ID смены
            * **[nameOperation]** => привязка начисления к какому-либо действию- имя таблицы действия. Например для начисления, связанного со сменой - nameOperation='orders_shifts'
            * **[objRate]** => объект. Ставка
            * **[objTypeUnitBalance]** => объект. Тип единицы измерения (для сделки)
            * **[note]** => примечание
            * **[rateDay]** => цена за день
            * **[rateUnit]** => цена за единицу
            * **[rateHour]** => цена за час
            * **[hour]** => всего часов
            * **[cnt]** => всего единиц
            * **[sumUnit]** => общая сумма за единицы (за сделку)
            * **[sum]** => общая сумма за все
            * **[sumPaid]** => выплаченная сумма по начислению. Вычисляется из payPay
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /payBalance/payBalanceInfoPut/{id}:
    put:
      tags:
        - payBalance
      summary: Изменение информации о денежных операциях начислений
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о денежных операциях начислений
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayBalanceInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payBalance/payBalanceSignature:
    put:
      tags:
        - payBalance
      summary: Заверение операции начисления
      requestBody:
        description: Данные для изменения информации о денежных операциях начислений
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayBalanceSignatureInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payBalance/payBalanceAdd:
    post:
      tags:
        - payBalance
      summary: Добавление денежной операции начисления
      requestBody:
        description: Данные для добавления денежной операции начисления
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayBalanceInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payBalance/payBalanceDelete/{id}:
    delete:
      tags:
        - payBalance
      summary: Удаление денежной операции начисления
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payTypes/payTypeAll:
    get:
      tags:
        - payTypes
      summary: Получение множественных данных о типах денежных операций
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[type]
          in: query
          description: поиск по типу
          schema:
            type: integer
        - name: like[name]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: search[nameOperation]
          in: query
          description: поиск по названию
          schema:
            type: string
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[state]** => 1-активный, 0- неактивный
            * **[personChange]** => кто вносил последние изменения
            * **[dtChange]** => когда вносили последние изменения
            * **[type]** => тип операции , может быть: "1"-положительная операция, "-1"- отрицательная операция 
            * **[name]** => название
            * **[name_operation]** => сущность операции, например для Вознаграждения за смену ordres_shifts
            * **[note]** => примечание
            * **[primary]** => основная (первичная) операция, может быть 1 или 0. о по умолчанию
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /payTypes/payTypeInfoPut/{id}:
    put:
      tags:
        - payTypes
      summary: Изменение информации о типах денежных операций
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации о типах денежных операций
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayTypeInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payTypes/payTypeAdd:
    post:
      tags:
      - payTypes
      summary: Добавление типа денежной операции
      requestBody:
        description: Данные для добавления типа денежной операции
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayTypeInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payTypes/payTypeDelete/{id}:
    delete:
      tags:
        - payTypes
      summary: Удаление типа денежной операции
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payDetail/payDetailAll:
    get:
      tags:
        - payDetail
      summary: Получение множественных данных о детализации денежных операций
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: search[state]
          in: query
          description: поиск по активности
          schema:
            type: integer
        - name: search[idPayPay]
          in: query
          description: поиск по ID платежа
          schema:
            type: integer
        - name: search[idPayBalance]
          in: query
          description: поиск по ID начисления
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /payDetail/payDetailAdd:
    post:
      tags:
        - payDetail
      summary: Добавление детализации денежных операций
      requestBody:
        description: Данные для добавления детализации денежных операций
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/PayDetailInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /payDetail/payDetailDelete/{id}:
    delete:
      tags:
        - payDetail
      summary: Удаление детализации
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeCondition/typeConditionAll:
    get:
      tags:
        - typeCondition
      summary: справочник состояний лидов
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[name]** => название
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /typeCondition/typeConditionInfoPut/{id}:
    put:
      tags:
        - typeCondition
      summary: Изменение информации о состоянии лида
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации 
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeConditionInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeCondition/typeConditionAdd:
    post:
      tags:
      - typeCondition
      summary: Добавление состояния лидов
      requestBody:
        description: Данные для добавления
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeConditionInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeCondition/typeConditionDelete/{id}:
    delete:
      tags:
        - typeCondition
      summary: Удаление состояния лидов
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeSource/typeSourceAll:
    get:
      tags:
        - typeSource
      summary: справочник источники информации
      parameters:
        - name: search[id]
          in: query
          description: поиск по ID
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            ## Успешный ответ 
            * **[id]** => ID записи
            * **[name]** => название
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Ok
                  method:
                    type: string
                    example: GET
  /typeSource/typeSourceInfoPut/{id}:
    put:
      tags:
        - typeSource
      summary: Изменение информации об источнике
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для изменения информации 
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeSourceInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeSource/typeSourceAdd:
    post:
      tags:
      - typeSource
      summary: Добавление истояника информации
      requestBody:
        description: Данные для добавления
        content:
          application/json:
            schema:
              type: object
              properties:
                pref:
                  description: "ID АК"
                  type: string
                session_id:
                  description: "ID пользователя"
                  type: integer
                domain:
                  description: Адрес сервера
                  type: string
                input:
                  $ref: "#/components/schemas/typeSourceInput"
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /typeSource/typeSourceDelete/{id}:
    delete:
      tags:
        - typeSource
      summary: Удаление источника информации
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: pref
          in: query
          description: ID АК
          required: true
          schema:
            type: string
        - name: session_id
          in: query
          description: ID пользователя
          required: true
          schema:
            type: integer
        - name: domain
          in: query
          description: Адрес сервера
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultOk"
  /help/markdownRules:
    get:
      tags:
        - help
      summary: Описание языка разметки markdown для полей description      
      description:  |
        *Очень важно понимать, что табы отступов слева в _исходном_ коде - важны!*  
        *Т.е. тот же текст desctiption начинающийся с начала строки - не будет работать,*  
        *т.к. его нужно отодвинуть табами вправо на нужное кол-во табов!*  
        &nbsp;  
        &nbsp;  
        
        ---
        `Абзацы и перенос строк`  
        <br />
        &nbsp;  
        Пустой абзац делается через \<br /> или \&nbsp;
        <br />
        &nbsp;  
        
        Перенос (абзац) следующей строки - это ДВОЙНОЙ ПРОБЕЛ В КОНЦЕ СТРОКИ! (или \<br />)  
        
        Например, начинаем строку  
        и переносим ее на следующую двойным пробелом в конце  
        &nbsp;  
        А чуть ниже сделана черта-разделитель как \"---\"  
        &nbsp;  
        &nbsp;  
        
        ---
        `Заголовки`  
        <br />
        &nbsp;  
        # Заголовок 1  
        ## Заголовок 2  
        ### Заголовок 3  
        #### Заголовок 4  
        ##### Заголовок 5  
        ###### Заголовок 6  
        &nbsp;  
        &nbsp;  
        
        ---
        `Выделение текста`  
        <br />
        &nbsp;  
        *Этот текст написан курсивом - для комментариев*  
        &nbsp;  
        **Это текст жирным - он акцентирует внимание**  
        &nbsp;  
        ***А этот текст и курсивом и жирным - для чего-то очень важного***  
        &nbsp;  
        &nbsp;  
        
        ---
        `Блоки кода и цитирование`  
        <br />
        &nbsp;  
        `Это inline блок для кода - моноширинный шрифт`  
        ```
        А это тоже блок для кода
        Здесь может быть много строчек
        ```
        > это типа цитата   
        > (просто сдвигает текст вправо)  
        &nbsp;  
        &nbsp;  
        
        ---
        `Списки`  
        <br />
        &nbsp;  
        Вот так делается простой список  
          * Элемент 1
          * Элемент 2
            * Это вложенный элемент
            * И это вложенный элемент
              * А это третий уровень вложенности
        
        Нумерованный список - тоже не проблема (но без подпунктов):
          1. Первый пункт
          2. Второй пункт
          3. Третий пункт
        &nbsp;  
        &nbsp;  
        
        ---
        `Ссылки и картинки`  
        <br />
        &nbsp;  
        [А так вставляется ссылка](https://editor.swagger.io/ "Hover описание ссылки")  
        &nbsp;  
        
        Вставим картинку: ![Фавиконка](https://ma-test-1.rdtn.ru/icons/favicon-16x16.png "Hover описание картинки")  
        &nbsp;  
        А тут эту картинку сделаем ссылкой: [![Фавиконка-ссылка](https://ma-test-1.rdtn.ru/icons/favicon-16x16.png)](https://ma-test-1.rdtn.ru/ "Hover описание картинки-ссылки")  
        &nbsp;  
        &nbsp;  
        
        ---
        `Таблицы`  
        <br />
        &nbsp;  
        | Даже простые | Таблицы | с Заголовком | Можно    | Делать |
        | -------------| ------- | -------------| -------- | ------ |
        | Киреев       | Даниил  | Владимирович | 01.01.79 | Муж    |
        &nbsp;  
        &nbsp;
        
        ---
        `Блоки`  
        <br />
        &nbsp;  
            <details>
              <summary>Описание всех методов можно прятать под раскрывашку</summary>
              <br />
              Очень **удобно прятать вспомогательный текст** под спойлер и тогда он будет виден  
              только когда надо его посмотреть.
            </details>  
        &nbsp;  
      responses:
        "200":
          description: Для форматирования описаний лучше использовать markdown
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    ResultError:
      type: object
      properties:
        result:
          type: string
          example: Ok
        method:
          type: string
          example: GET
        data:
          type: object
          properties:
            auth:
              type: integer
              example: 0
            message:
              type: string
              example: "401"
    owner:
      type: object
      properties:
        id:
          type: integer
          description: ID
        dt_begin:
          type: string
          format: date-time
          description: Дата и время создания АК
        id_person_begin:
          type: integer
          description: ID пользователя, который создал АК
        dt_change:
          type: string
          format: date-time
          description: Дата и время изменения информации об АК
        id_person_change:
          type: integer
          description: ID пользователя, который изменил информацию об АК
        dt_close:
          type: string
          format: date-time
          description: Дата и время закрытия АК
        id_person_close:
          type: integer
          description: ID пользователя, который закрыл АК
        realname:
          type: string
          description: название
        domain:
          type: string
          description: название домена
        address:
          type: string
          description: адрес
        close_period:
          type: string
          format: date
          description: Дата блокировки
        geolat:
          type: string
          description: координаты широта
        geolon:
          type: string
          description: координаты долгота
        note:
          type: string
          description: дополнительная информация         
    ownerInput:
      type: object
      properties:
        dt_begin:
          type: string
          format: date-time
          description: Дата и время создания АК
        id_person_begin:
          type: integer
          description: ID пользователя, который создал АК
        dt_change:
          type: string
          format: date-time
          description: Дата и время изменения информации об АК
        id_person_change:
          type: integer
          description: ID пользователя, который изменил информацию об АК
        dt_close:
          type: string
          format: date-time
          description: Дата и время закрытия АК
        id_person_close:
          type: integer
          description: ID пользователя, который закрыл АК
        realname:
          type: string
          description: название
        domain:
          type: string
          description: название домена
        address:
          type: string
          description: адрес
        close_period:
          type: string
          format: date
          description: Дата блокировки
        geolat:
          type: string
          description: координаты широта
        geolon:
          type: string
          description: координаты долгота
        note:
          type: string
          description: дополнительная информация    
    module:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Уникальный идентификатор
        name:
          type: string
          description: название
        permis:
          type: integer
          description: доступ к модулю         
        note:
          type: string
          description: дополнительная информация   
    moduleInput:
      type: object
      properties:
        name:
          type: string
          description: название
        permis:
          type: integer
          description: доступ к модулю         
        note:
          type: string
          description: дополнительная информация   
    Person:
      type: object
      properties:
        id:
          type: integer
          description: ID
        realname:
          type: string
          description: ФИО (опционально)
        name:
          type: string
          description: Логин
        password:
          type: string
          description: пароль          
        tel:
          type: string
          description: телефон
        email:
          type: string
          description: адрес электронной почты
        id_group:
          type: integer
          description: id группы
        id_unit:
          type: integer
          description: id роли
        id_owner:
          type: integer
          description: id АК      
        script_name:
          type: string
          description: стартовая страница
        cookie:
          type: string
          description: куки
        timezone:
          type: integer
          description: часовой пояс относительно UTC0
        remember_token:
          type: string
          description: token          
    PersonInput:
      type: object
      properties:
        realname:
          type: string
          description: ФИО (опционально)
        name:
          type: string
          description: Логин
        password:
          type: string
          description: пароль          
        tel:
          type: string
          description: телефон
        email:
          type: string
          description: адрес электронной почты
        id_group:
          type: integer
          description: id группы
        id_unit:
          type: integer
          description: id роли
        script_name:
          type: string
          description: стартовая страница
        timezone:
          type: integer
          description: часовой пояс относительно UTC0
    Unit:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: название роли
        script_name:
          type: string
          description: стартовая страница
    UnitInput:
      type: object
      properties:
        name:
          type: string
          description: название роли
        script_name:
          type: string
          description: стартовая страница
        note:
          type: string
          description: Примечание об организации
    ResultOk:
      type: object
      properties:
        result:
          type: string
          example: Ok
        method:
          type: string
          example: POST
        data:
          type: object
          properties:
            result:
              type: string
              example: Ok
    ResultOkId:
      allOf:
        - $ref: "#/components/schemas/ResultOk"
        - type: object
          properties:
            data:
              allOf:
                - $ref: "#/components/schemas/ResultOk/properties/data"
                - type: object
                  properties:
                    Id:
                      type: integer
                      example: 1
    DeleteResult:
      type: object
      properties:
        result:
          type: string
          example: Ok
        method:
          type: string
          example: DELETE
        data:
          type: object
          properties:
            result:
              type: string
              example: Ok
            Id:
              type: integer
              example: 1
    CompanyInput:
      type: object
      properties:
        state:
          type: integer
          description: Состояние организации (опционально)
        type:
          type: string
          description: Тип организации (indiv физическое/ entity юридическое лицо) (опционально)
        name:
          type: string
          description: Название организации (опционально)
        realname:
          type: string
          description: Настоящее имя организации (опционально)
        inn:
          type: string
          description: ИНН организации (опционально)
        kpp:
          type: string
          description: КПП организации (опционально)
        ogrn:
          type: string
          description: ОГРН организации (опционально)
        note:
          type: string
          description: Примечание об организации (опционально)
    contractorInput:
      type: object
      properties:
        state:
          type: integer
          description: Активность (1-активный, 0- удален)
        type:
          type: string
          description: Тип контрагента (1 физическое/ 0 юридическое лицо) (опционально)
        name:
          type: string
          description: Название контрагента(опционально)
        egrul:
          type: string
          description: Название контрагента по ЕГРЮЛ(опционально)
        inn:
          type: string
          description: ИНН контрагента (опционально)
        kpp:
          type: string
          description: КПП контрагента (опционально)
        ogrn:
          type: string
          description: ОГРН контрагента (опционально)
        note:
          type: string
          description: Примечание об организации (опционально)
    contractServicesInput:
      type: object
      properties:
        state:
          type: integer
          description: Активность (1-активный, 0- удален)
        idTypeServices:
          type: integer
          format: int32
          description: ID типа услуги
        idGroup:
          type: integer
          format: int32
          description: ID группы (обязательно) или 0 для всех
        idObject:
          type: integer
          format: int32
          description: ID объекта (обязательно) или 0 для всех
        idDepartment:
          type: integer
          format: int32
          description: ID отдела (обязательно) или 0 для всех
        unitsHour:
          type: string
          description: Единиц в одном часе (опционально)
        hourUnits:
          type: string
          description: Единиц в одном часе (опционально)
        note:
          type: string
          description: Примечание об организации (опционально)
    typeServicesInput:
      type: object
      properties:
        state:
          type: integer
          description: Активность (1-активный, 0- удален)
        name:
          type: integer
          description: Название
        idTypeUnits:
          type: integer
          format: int32
          description: ID типа единицы
        note:
          type: string
          description: Примечание об организации (опционально)
    contractorAccountInput:
      type: object
      properties:
        state:
          type: integer
          description: Активность (1-активный, 0- удален)
        main:
          type: integer
          description: 1-основной ,0- не основной
        type:
          type: integer
          description: Тип 0-наличный, 1- безналичный
        card:
          type: string
          description: Номер карты (если есть) 
        bankName:
          type: string
          description: Название банка (если есть)
        bankBik:
          type: string
          description: БИК банка (если есть) 
        account:
          type: string
          description: Номер счета (если есть)
        note:
          type: string
          description: Примечание (опционально)
        dtBegin:
          type: string
          description: Дата начала действия
        dtEnd:
          type: string
          description: Дата окончания действия
    SpecialityInput:
      type: object
      properties:
        name:
          type: string
          description: Название специализации (опционально)
        note:
          type: string
          description: Примечание о специализации (опционально)
        state:
          type: integer
          description: Активная-1, не активная-0
    lpSpecialityInput:
      type: object
      properties:
        idWorker:
          type: integer
          description: исполнитель
        idSpeciality:
          type: integer
          description: специализация          
        note:
          type: string
          description: Примечание о специализации (опционально)       
    lpAccountInput:
      type: object
      properties:
        idWorker:
          type: integer
          description: id исполнитель
        main:
          type: integer
          description: 1-основной ,0- не основной
        type:
          type: integer
          description: Тип 0-наличный, 1- безналичный
        card:
          type: string
          description: Номер карты (если есть) 
        bankName:
          type: string
          description: Название банка (если есть)
        bankBik:
          type: string
          description: БИК банка (если есть) 
        account:
          type: string
          description: Номер счета (если есть)
        state:
          type: integer
          description: Активная-1, не активная-0
        note:
          type: string
          description: Примечание 
    AccountInput:
      type: object
      properties:
        idCompany:
          type: integer
          description: ID организации, к которой принадлежит счет (опционально)
        name:
          type: string
          description: Название счета (опционально)
        type:
          type: string
          description: Тип счета (0 наличный/ 1 безналичный) (опционально)
        card:
          type: string
          description: Номер карты (если есть) (опционально)
        bankName:
          type: string
          description: Название банка (если есть) (опционально)
        bankBik:
          type: string
          description: БИК банка (если есть) (опционально)
        account:
          type: string
          description: Номер счета (если есть) (опционально)
        note:
          type: string
          description: Примечание о счете (опционально)
        state:
          type: integer
          description: Состояние счета (активный/неактивный) (опционально)
        main:
          type: integer
          description: Основной счет (1 да/ 0 нет) (опционально)
    Fias:
      type: object
      properties:
        address:
          type: string
          maxLength: 256
          description: Полный адрес
        postalCode:
          type: string
          maxLength: 6
          description: Почтовый индекс
        federalDistrict:
          type: string
          maxLength: 100
          description: Федеральный округ
        regionFiasId:
          type: string
          maxLength: 40
          description: Идентификатор региона ФИАС
        regionWithType:
          type: string
          maxLength: 100
          description: Регион с типом населенного пункта
        areaFiasId:
          type: string
          maxLength: 40
          description: Идентификатор района ФИАС
        areaTithType:
          type: string
          maxLength: 100
          description: Район с типом населенного пункта
        cityFiasId:
          type: string
          maxLength: 40
          description: Идентификатор города ФИАС
        cityWithType:
          type: string
          maxLength: 100
          description: Город с типом населенного пункта
        cityArea:
          type: string
          maxLength: 100
          description: Административный округ города
        cityDistrictFiasId:
          type: string
          maxLength: 40
          description: Идентификатор района города ФИАС
        cityDistrictWithType:
          type: string
          maxLength: 100
          description: Район города с типом населенного пункта
        streetFiasId:
          type: string
          maxLength: 40
          description: Идентификатор улицы ФИАС
        streetWithType:
          type: string
          maxLength: 100
          description: Улица с типом населенного пункта
        houseFiasId:
          type: string
          maxLength: 40
          description: Идентификатор дома ФИАС
        houseType:
          type: string
          maxLength: 20
          description: Тип дома (строение, корпус и т.п.)
        house:
          type: string
          maxLength: 30
          description: Номер дома
        geoLat:
          type: number
          format: float
          description: Географическая широта адреса
        geoLon:
          type: number
          format: float
          description: Географическая долгота адреса
        level:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
          description: Уровень адреса ФИАС (1-8)
        json:
          type: string
          format: json
          description: Дополнительные данные в формате JSON
        fiasId:
          type: string
          maxLength: 40
          description: Идентификатор ФИАС
    FiasInput:
      type: object
      properties:
        fias_id:
          type: string
          description: id ФИАС объекта
        man_id:
          type: integer
          description: ID физ лица (опционально)
        client_id:
          type: integer
          description: ID клиента (опционально)          
        object_id:
          type: integer
          description: ID объекта (опционально)                   
    client:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        address:
          type: string
          maxLength: 256
        idFiass:
          type: integer
          format: int32
        contact:
          type: string
          maxLength: 256
        www:
          type: string
          maxLength: 255
        idPerson:
          type: integer
          format: int32
        state:
          type: integer
        closePeriod:
          type: string
          format: date
        note:
          type: string
    clientInput:
      allOf:
        - $ref: "#/components/schemas/client"
        - required:
            - name
    clientGroup:
      type: object
      properties:
        name:
          type: string
        idPerson:
          type: integer
          format: int32
        state:
          type: integer
        idClient:
          type: integer
          format: int32
        note:
          type: string
    clientGroupInput:
      allOf:
        - $ref: "#/components/schemas/clientGroup"
        - required:
            - name
    clientObject:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        idPerson:
          type: integer
          format: int32
        address:
          type: string
          maxLength: 256
        idFiass:
          type: integer
          format: int32
        geolat:
          type: string
          maxLength: 10
        geolon:
          type: string
          maxLength: 10
        note:
          type: string
        note2:
          type: string
        idGroup:
          type: integer
          format: int32
        timezone:
          type: integer
          format: int32
        state:
          type: integer
        closePeriod:
          type: string
          format: date
    clientObjectInput:
      allOf:
        - $ref: "#/components/schemas/clientObject"
        - required:
            - name
            - address
    clientDepartment:
      type: object
      properties:
        idObject:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 256
        note:
          type: string
        state:
          type: integer
          description: Активная-1, не активная-0
    clientDepartmentInput:
      allOf:
        - $ref: "#/components/schemas/clientDepartment"
        - required:
            - name
    clientRateInput:
      type: object
      properties:
        idSpeciality:
          type: integer
          description: ID специальности  
        idDepartment:
          type: integer
          description: ID подразделения   
        rateHour:
          type: integer
          description:  стоимость за час
        hours:
          type: integer
          description:  кол-во часов
        rateDay:
          type: integer
          description:  стоимость за смену      
        rateUnit:
          type: integer
          description:  стоимость за единицу       
        idTypeUnit:
          type: integer
          description:  тип единицы измерения          
        idReq:
          type: integer
          description:  id набора базовых требований
        idSet:
          type: integer
          description:  id набора расширенных требований          
        note:
          type: string
        state:
          type: integer
          description: Активная-1, не активная-0
    clientReq:
      type: object
      properties:
        gender:
          type: string
        age_after:
          type: integer
          format: int32
        ageBefore:
          type: integer
          format: int32
        national:
          type: string
        passport:
          type: string
        med:
          type: string
        note:
          type: string
        state:
          type: integer
          description: Активная-1, не активная-0
    clientReqInput:
      allOf:
        - $ref: "#/components/schemas/clientReq"
        - required:
            - gender
    globalReq:
      type: object
      properties:
        clients:
          type: integer
        name:
          type: string
          maxLength: 256
        type:
          type: integer
          format: int6          
        hidden:
          type: integer
        required:
          type: integer
        note:
          type: string
    globalReqInput:
      allOf:
        - $ref: "#/components/schemas/globalReq"
        - required:
            - gender
    setReq:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        note:
          type: string
        auto:
          type: integer
        state:
          type: integer
          description: Активная-1, не активная-0
    setReqInput:
      allOf:
        - $ref: "#/components/schemas/setReq"
    setRequirementInput:
      type: object
      properties:
        idSet:
          type: integer
          format: int32
          description: id набора
        idRequirement:
          type: integer
          format: int32
          description: id требования
        hidden:
          type: integer
        required:
          type: integer
    setRequirementChange:          
      type: object
      properties:
        use:
          type: integer
        hidden:
          type: integer
        required:
          type: integer
    lpSkill:
      type: object
      properties:
        state:
          type: integer
        idSkill:
          type: integer
          format: int32
          description: id навыка
        idWorker:
          type: integer
          format: int32
          description: id исполнителя
        idClient:
          type: integer
          format: int32
          description: id клиента
        note:
          type: string
    lpSkillInput:
      allOf:
        - $ref: "#/components/schemas/lpSkill"
    TypeUnit:
      type: object
      properties:
        state:
          type: integer
        nameFull:
          type: string
          maxLength: 256
        name:
          type: string
          maxLength: 20
        note:
          type: string
    TypeUnitInput:
      allOf:
        - $ref: "#/components/schemas/TypeUnit"
        - required:
            - nameFull
            - name
    lpLeadInput:
      type: object
      properties:
        state:
          type: integer
        dtChange:
          type: string
          format: date-time
        idPersonChange:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        id_fias:
          type: integer
        mail:
          type: string
        phone:
          type: string
        idCondition:
          type: integer     
        idSource:
          type: integer   
        note:
          type: string
    typeContractInput:
      type: object
      properties:
        state:
          type: integer
        dtChange:
          type: string
          format: date-time
        idPersonChange:
          type: integer
          format: int32
        name:
          type: string
        note:
          type: string
    IpManInput:
      type: object
      properties:
        sname:
          type: string
        name:
          type: string
        mname:
          type: string
        gender:
          type: string
        bd:
          type: string
        photo:
          type: string
        phone:
          type: string
        phone2:
          type: string
        mail:
          type: string
        address:
          type: string
        idFias:
          type: integer
        geolat:
          type: string        
        geolon:
          type: string              
        note:
          type: string
        idLead:
          type: integer
        state:
          type: integer
    WorkerInput:
      type: object
      properties:
        idMan:
          type: integer
        number:
          type: string
        dtBegin:
          type: string
        dtPause:
          type: string
        dtEnd:
          type: string
        dtCandidate:
          type: string
        note:
          type: string
        note2:
          type: string
    ContractInput:
      type: object
      properties:
        state:
          type: integer
        idWorker:
          type: integer
        type:
          type: integer
        edo:
          type: integer
        dtBegin:
          type: string
        dtEnd:
          type: string
        dtContractSign:
          type: string
        note:
          type: string
        idCompany:
          type: integer
    companyContractInput:
      type: object
      properties:
        state:
          type: integer
        idCompany:
          type: integer
        idContractor:
          type: integer
        name:
          type: string
        number:
          type: string      
        dtBegin:
          type: string
        dtEnd:
          type: string
        dtContractSign:
          type: string
        nds:
          type: string
        ndsType:
          type: string        
        note:
          type: string
        idAccount:
          type: integer
    DocInput:
      type: object
      properties:
        idType:
          type: integer
        idMan:
          type: integer
        ser:
          type: string
        number:
          type: string
        kem:
          type: string
        dt:
          type: string
        podr:
          type: string
        mesto:
          type: string
        reg:
          type: string
        dtReg:
          type: string
        regVr:
          type: string
        dtRegVr:
          type: string
        dtBd:
          type: string
        state:
          type: integer
    NoteInput:
      type: object
      properties:
        idMan:
          type: integer
          description: id Физ. лица
        importance:
          type: integer          
          description: Важность 1-обычный 2- важно
        note:
          type: string
    OrderInput:
      type: object
      properties:
        state:
          type: integer
        idClient:
          type: integer
        note:
          type: string
    OrderReqInput:
      type: object
      properties:
        state:
          type: integer
          default: 1
        gender:
          type: string
        note:
          type: string
        idRequest:
          type: integer
          description: "Заявка"
        idReq:
          type: integer
          description: "Базовые требования из ставок"          
        ageAfter:
          type: integer
        ageBefore:
          type: integer
        national:
          type: string
        passport:
          type: string
        med:
          type: string
        idSet:
          type: integer
          description: "Набор расширенных требований"
    RequestInput:
      type: object
      properties:
        state:
          type: integer
          default: 1
        idOrder:
          type: integer
        idObject:
          type: integer
        attention:
          type: integer
        dtBegin:
          type: string
          format: date-time
        dtEnd:
          type: string
          format: date-time
        cnt:
          type: integer
        idRate:
          type: integer
        note:
          type: string
        alert:
          type: string
    ShiftInput:
      type: object
      properties:
        state:
          type: integer
        idRequest:
          type: integer
        idContract:
          type: integer
        dtBegin:
          type: string
          format: date-time
        dtEnd:
          type: string
          format: date-time
        cntHour:
          type: integer
        costHour:
          type: integer
        cnt:
          type: integer
        note:
          type: string
        dtPlan:
          type: string
          format: date-time
        idPersonPlan:
          type: integer
        dtRemove:
          type: string
          format: date-time
        idPerson_remove:
          type: integer
        idTypeUnit:
          type: integer
        sum:
          type: integer
        sumUnit:
          type: integer
    PayPayInput:
      type: object
      properties:
        state:
          type: integer
        idAccount:
          type: integer
        idLpAccount:
          type: integer
        sum:
          type: integer
        dtPay:
          type: string
          format: date
        idPersonPay:
          type: integer
        dtSiganture:
          type: string
          format: date-time
        idPersonSignature:
          type: integer
        note:
          type: string
    Balance:
      type: object
      properties:
        balance:
          type: integer
    Summ:
      type: object
      properties:
        summ:
          type: integer
    PayBalanceSignatureInput:
      type: object
      properties:
        idShift:
          type: integer
          description: ID смены
        signature:
          type: integer
          description: 1-заверено,0-разверено
    PayBalanceInput:
      type: object
      properties:
        dt:
          type: string
          format: date-time
        state:
          type: integer
        idType:
          type: integer
        idContract:
          type: integer
        idOperation:
          type: integer
          description: id записи перекресной таблицы, например id смены
        idShift:
          type: integer
          description: id смены, только для начислений к смене, подменится idOperation
        nameOperation:
          type: string
        idRate:
          type: integer
        sum:
          type: integer
        note:
          type: string
        rateUnit:
          type: integer
        rateDay:
          type: integer
        rateHour:
          type: integer
        hour:
          type: integer
        cnt:
          type: integer
        idTypeUnit:
          type: integer
        sumUnit:
          type: integer
    PayTypeInput:
      type: object
      properties:
        state:
          type: integer
        type:
          type: integer
        name:
          type: string
        nameOperation:
          type: string
        note:
          type: string
        primary:
          type: integer
    typeConditionInput:
      type: object
      properties:
        name:
          type: string
    typeSourceInput:
      type: object
      properties:
        name:
          type: string
    PayDetailInput:
      type: object
      properties:
        state:
          type: string
          enum: ["y", "n"]
        idPayPay:
          type: integer
        idPayBalance:
          type: integer
        sum:
          type: integer
    permisUnitPut:
      type: object
      properties:
        idUnit:
          type: integer
    permisPersonPut:
      type: object
      properties:
        idPerson:
          type: integer          
servers:
  - description: Server
    url: https://outsourcing.complat.ru/api/v1